{"ast":null,"code":"var _jsxFileName = \"/Users/jamescaleca/Documents/development/messaging-app/client/src/components/NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n\n  const [selectedContactIds, setSelectedContactIds] = useState();\n  const {\n    contacts\n  } = useContacts();\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, id];\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewConversationModal, \"3th9yRCYf8kommvBjps5tLKrtME=\", false, function () {\n  return [useContacts];\n});\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"names":["React","useState","Modal","Form","Button","useContacts","NewConversationModal","selectedContactIds","setSelectedContactIds","contacts","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","id","handleSubmit","map","contact","name"],"sources":["/Users/jamescaleca/Documents/development/messaging-app/client/src/components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\n\nexport default function NewConversationModal() {\n    const [selectedContactIds, setSelectedContactIds] = useState()\n\n    const { contacts } = useContacts()\n\n    function handleCheckboxChange(contactId) {\n        setSelectedContactIds(prevSelectedContactIds => {\n            if (prevSelectedContactIds.includes(contactId)) {\n                return prevSelectedContactIds.filter(prevId => {\n                    return contactId !== prevId \n                })\n            } else {\n                return [...prevSelectedContactIds, id]\n            }\n        })\n    }\n\n  return (\n    <>\n        <Modal.Header closeButton>Create Conversation</Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n                {contacts.map(contact => (\n                    <Form.Group controlId={contact.id} key={contact.id}>\n                        <Form.Check \n                            type=\"checkbox\"\n                            value={selectedContactIds.includes(contact.id)}\n                            label={contact.name}\n                            onChange={() => handleCheckboxChange(contact.id)}\n                        />\n                    </Form.Group>\n                ))}\n                <Button type=\"submit\">Create</Button>\n            </Form>\n        </Modal.Body>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;EAAA;;EAC3C,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,EAA5D;EAEA,MAAM;IAAEQ;EAAF,IAAeJ,WAAW,EAAhC;;EAEA,SAASK,oBAAT,CAA8BC,SAA9B,EAAyC;IACrCH,qBAAqB,CAACI,sBAAsB,IAAI;MAC5C,IAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAAgD;QAC5C,OAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,MAAM,IAAI;UAC3C,OAAOJ,SAAS,KAAKI,MAArB;QACH,CAFM,CAAP;MAGH,CAJD,MAIO;QACH,OAAO,CAAC,GAAGH,sBAAJ,EAA4BI,EAA5B,CAAP;MACH;IACJ,CARoB,CAArB;EASH;;EAEH,oBACE;IAAA,wBACI,QAAC,KAAD,CAAO,MAAP;MAAc,WAAW,MAAzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD,CAAO,IAAP;MAAA,uBACI,QAAC,IAAD;QAAM,QAAQ,EAAEC,YAAhB;QAAA,WACKR,QAAQ,CAACS,GAAT,CAAaC,OAAO,iBACjB,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAEA,OAAO,CAACH,EAA/B;UAAA,uBACI,QAAC,IAAD,CAAM,KAAN;YACI,IAAI,EAAC,UADT;YAEI,KAAK,EAAET,kBAAkB,CAACM,QAAnB,CAA4BM,OAAO,CAACH,EAApC,CAFX;YAGI,KAAK,EAAEG,OAAO,CAACC,IAHnB;YAII,QAAQ,EAAE,MAAMV,oBAAoB,CAACS,OAAO,CAACH,EAAT;UAJxC;YAAA;YAAA;YAAA;UAAA;QADJ,GAAwCG,OAAO,CAACH,EAAhD;UAAA;UAAA;UAAA;QAAA,QADH,CADL,eAWI,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADF;AAoBD;;GArCuBV,oB;UAGCD,W;;;KAHDC,oB"},"metadata":{},"sourceType":"module"}