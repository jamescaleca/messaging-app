{"ast":null,"code":"var _jsxFileName = \"/Users/jamescaleca/Documents/development/messaging-app/client/src/contexts/ContactsProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  return userContext(ContactsContext);\n}\nexport function ContactsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactsProvider, \"aWfzfaPwLedoIhPywC4kgPBb+0k=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","userContext","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"sources":["/Users/jamescaleca/Documents/development/messaging-app/client/src/contexts/ContactsProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n  return userContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, { id, name }]\n    })\n  }\n\n  return (\n    <ContactsContext.Provider value={{ contacts, createContact }}>\n      {children}\n    </ContactsContext.Provider>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;EAC5B,OAAOC,WAAW,CAACH,eAAD,CAAlB;AACD;AAED,OAAO,SAASI,gBAAT,OAAwC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC7C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;EAEA,SAASS,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;IAC/BH,WAAW,CAACI,YAAY,IAAI;MAC1B,OAAO,CAAC,GAAGA,YAAJ,EAAkB;QAAEF,EAAF;QAAMC;MAAN,CAAlB,CAAP;IACD,CAFU,CAAX;EAGD;;EAED,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAAEJ,QAAF;MAAYE;IAAZ,CAAjC;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAdeD,gB;UACkBL,e;;;KADlBK,gB"},"metadata":{},"sourceType":"module"}